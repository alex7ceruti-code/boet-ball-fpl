/**
 * BoetBall Content Radar - Main Automation Script
 * Automatically monitors FPL sources and updates Google Sheet with SA-flavored content insights
 */

// Configuration
const CONFIG = {
  FPL_API_URL: 'https://fantasy.premierleague.com/api/bootstrap-static/',
  REDDIT_API_URL: 'https://www.reddit.com/r/FantasyPL/hot.json?limit=15',
  SHEET_NAME: 'Content Radar',
  UPDATE_INTERVAL_MS: 2000, // 2 seconds between API calls
  CLEANUP_DAYS: 14, // Remove auto-generated entries older than 14 days
  MIN_REDDIT_SCORE: 50 // Minimum upvotes for Reddit posts
};

// South African cultural angles and phrases
const SA_CONTENT = {
  injury: [
    'Weekend kickoff timing perfect for braai debates about captain choices',
    'Injury news breaking during morning coffee - classic FPL stress timing',
    'Like planning a braai and the weather turns - need backup plans, boet!',
    'SAST deadline pressure adds extra spice to these decisions',
    'Injury doubts hitting harder than loadshedding during the rugby'
  ],
  price: [
    'Price changes at 2:30 AM SAST - check before bed, not morning coffee',
    'Like buying meat at closing time - reduced price but still quality',
    'Petrol price style volatility hitting FPL assets hard',
    'Budget management as crucial as planning monthly groceries',
    'Price drops rarer than finding parking in Cape Town CBD'
  ],
  transfer: [
    'Transfer trends spreading faster than veldfire in the Karoo',
    'Community moving like traffic on the N1 during rush hour',
    'Template changes happening quicker than weather in Cape Town',
    'Popular picks spreading like boerewors at a braai'
  ],
  fixture: [
    'Fixture analysis more detailed than planning a perfect braai',
    'DGW scheduling during school holidays - lekker timing for family planning',
    'Kickoff times in SAST making weekend viewing plans easier',
    'Fixture congestion worse than Johannesburg traffic'
  ]
};

const PLAYER_POOL = [
  'Salah', 'Haaland', 'Kane', 'Palmer', 'Saka', 'Son', 'Watkins', 'Isak', 
  'Alexander-Arnold', 'Van Dijk', 'Walker', 'James', 'Trippier', 'Robertson',
  'Fernandes', 'De Bruyne', 'Odegaard', 'Maddison', 'Ward-Prowse', 'Rice'
];

/**
 * Main function to run weekly content radar update
 */
function runWeeklyContentRadarUpdate() {
  console.log('üöÄ Starting BoetBall Content Radar weekly update...');
  
  try {
    // Initialize sheet
    const sheet = getOrCreateSheet();
    
    // Cleanup old entries
    cleanupOldEntries(sheet);
    
    // Run data collection functions with rate limiting
    updateFPLOfficialData(sheet);
    Utilities.sleep(CONFIG.UPDATE_INTERVAL_MS);
    
    updateRedditFPLData(sheet);
    Utilities.sleep(CONFIG.UPDATE_INTERVAL_MS);
    
    monitorPriceChanges(sheet);
    Utilities.sleep(CONFIG.UPDATE_INTERVAL_MS);
    
    // Update timestamp
    sheet.getRange('N1').setValue('Last Update: ' + new Date().toLocaleString('en-ZA', {timeZone: 'Africa/Johannesburg'}));
    
    console.log('‚úÖ Weekly BoetBall Content Radar update completed successfully');
    
  } catch (error) {
    console.error('‚ùå Error in weekly update:', error);
    
    // Send email notification on error (optional)
    // MailApp.sendEmail(
    //   'your-email@domain.com',
    //   'BoetBall Content Radar Error',
    //   `Error occurred during update: ${error.toString()}`
    // );
  }
}

/**
 * Monitor FPL Official API for injuries, news, and player updates
 */
function updateFPLOfficialData(sheet) {
  console.log('üìä Updating FPL Official data...');
  
  try {
    const response = UrlFetchApp.fetch(CONFIG.FPL_API_URL);
    const data = JSON.parse(response.getContentText());
    
    // Check for injured/doubtful players
    const concerningPlayers = data.elements.filter(player => 
      (player.news && player.news.length > 0) || 
      player.chance_of_playing_next_round < 75
    );
    
    concerningPlayers.forEach(player => {
      if (player.selected_by_percent > 5) { // Only track popular players
        const saAngle = getRandomElement(SA_CONTENT.injury);
        const actionItem = generateActionItem('injury', player);
        
        appendToSheet(sheet, {
          date: new Date(),
          source: 'FPL Official API',
          type: 'Injury/News Update',
          topic: `${player.web_name} - ${player.chance_of_playing_next_round}% chance to play`,
          summary: `${player.web_name} (${player.team_code}) - ${player.news || 'Fitness concern'}. Playing chance: ${player.chance_of_playing_next_round}%`,
          players: player.web_name,
          relevance: `${player.selected_by_percent}% ownership (${formatCurrency(player.now_cost)}) - Major captaincy implications`,
          saAngle: saAngle,
          action: actionItem,
          autoGenerated: 'Yes'
        });
      }
    });
    
    // Check for form players (scoring in last 3 weeks)
    const formPlayers = data.elements
      .filter(player => player.form > 6 && player.selected_by_percent < 10)
      .sort((a, b) => b.form - a.form)
      .slice(0, 3);
    
    formPlayers.forEach(player => {
      const saAngle = 'Hidden gem alert - like finding a good boerewors at Pick n Pay prices';
      const actionItem = `"Differential Delight" feature on ${player.web_name}`;
      
      appendToSheet(sheet, {
        date: new Date(),
        source: 'FPL Official API',
        type: 'Form Player Alert',
        topic: `${player.web_name} - Under-the-radar form player`,
        summary: `${player.web_name} averaging ${player.form} points over recent games with only ${player.selected_by_percent}% ownership`,
        players: player.web_name,
        relevance: `Low ownership differential potential - ${formatCurrency(player.now_cost)} price point`,
        saAngle: saAngle,
        action: actionItem,
        autoGenerated: 'Yes'
      });
    });
    
    console.log(`‚úÖ FPL Official data updated - ${concerningPlayers.length + formPlayers.length} entries added`);
    
  } catch (error) {
    console.error('‚ùå Error updating FPL Official data:', error);
  }
}

/**
 * Monitor Reddit r/FantasyPL for trending discussions
 */
function updateRedditFPLData(sheet) {
  console.log('üßµ Updating Reddit FPL data...');
  
  try {
    const response = UrlFetchApp.fetch(CONFIG.REDDIT_API_URL, {
      headers: {
        'User-Agent': 'BoetBall-Content-Radar/1.0'
      }
    });
    
    const data = JSON.parse(response.getContentText());
    
    if (data.data && data.data.children) {
      const relevantPosts = data.data.children
        .filter(post => {
          const postData = post.data;
          return isFPLRelevant(postData.title) && 
                 postData.score >= CONFIG.MIN_REDDIT_SCORE &&
                 !postData.stickied;
        })
        .slice(0, 5); // Top 5 posts only
      
      relevantPosts.forEach(post => {
        const postData = post.data;
        const saAngle = getRandomElement([
          'Reddit community insights - SA managers often trail these trends by days',
          'Global discussion during SA work hours - perfect lunch break reading',
          'International FPL wisdom that local managers can adapt',
          'Community sentiment shifting like Cape Town weather'
        ]);
        
        const actionItem = generateRedditActionItem(postData);
        const playerMentions = extractPlayerMentions(postData.title + ' ' + (postData.selftext || ''));
        
        appendToSheet(sheet, {
          date: new Date(postData.created_utc * 1000),
          source: 'r/FantasyPL Reddit',
          type: 'Community Discussion',
          topic: truncateText(postData.title, 60),
          summary: extractSummary(postData.selftext || postData.title),
          players: playerMentions,
          relevance: `High engagement (${postData.score} upvotes, ${postData.num_comments} comments) - Community trend indicator`,
          saAngle: saAngle,
          action: actionItem,
          autoGenerated: 'Yes'
        });
      });
      
      console.log(`‚úÖ Reddit data updated - ${relevantPosts.length} relevant posts added`);
    }
    
  } catch (error) {
    console.error('‚ùå Error updating Reddit data:', error);
  }
}

/**
 * Monitor price changes and ownership shifts
 */
function monitorPriceChanges(sheet) {
  console.log('üí∞ Monitoring price changes...');
  
  try {
    const response = UrlFetchApp.fetch(CONFIG.FPL_API_URL);
    const data = JSON.parse(response.getContentText());
    
    // Check for significant price movements
    const priceChanges = data.elements.filter(player => 
      Math.abs(parseFloat(player.cost_change_event || 0)) >= 0.1 &&
      player.selected_by_percent >= 1
    );
    
    priceChanges.forEach(player => {
      const changeType = player.cost_change_event > 0 ? 'rise' : 'drop';
      const saAngle = changeType === 'rise' ? 
        getRandomElement(SA_CONTENT.price.filter(p => p.includes('rise') || p.includes('up'))) :
        getRandomElement(SA_CONTENT.price);
      
      const actionItem = `"Price ${changeType === 'rise' ? 'Alert' : 'Drop Special'}" - ${player.web_name} analysis with SAST timing tips`;
      
      appendToSheet(sheet, {
        date: new Date(),
        source: 'FPL Price Tracker',
        type: 'Price Changes',
        topic: `${player.web_name} price ${changeType} - ${formatCurrency(player.now_cost)}`,
        summary: `${player.web_name} ${changeType === 'rise' ? 'increased' : 'dropped'} by ¬£${Math.abs(player.cost_change_event)}m to ${formatCurrency(player.now_cost)}`,
        players: player.web_name,
        relevance: `${player.selected_by_percent}% ownership affected - ${changeType === 'rise' ? 'Transfer out pressure' : 'Potential bargain opportunity'}`,
        saAngle: saAngle,
        action: actionItem,
        autoGenerated: 'Yes'
      });
    });
    
    console.log(`‚úÖ Price monitoring completed - ${priceChanges.length} price changes tracked`);
    
  } catch (error) {
    console.error('‚ùå Error monitoring price changes:', error);
  }
}

/**
 * Helper Functions
 */

function getOrCreateSheet() {
  const spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  let sheet = spreadsheet.getSheetByName(CONFIG.SHEET_NAME);
  
  if (!sheet) {
    sheet = spreadsheet.insertSheet(CONFIG.SHEET_NAME);
    // Add headers
    sheet.getRange(1, 1, 1, 12).setValues([[
      'Date', 'Source', 'Type of Content', 'Key Topic', 'Summary', 
      'Player Mentions', 'FPL Relevance', 'SA Angle', 'Action for BoetBall',
      'Status', 'Engagement Score', 'Auto-Generated'
    ]]);
    
    // Format headers
    sheet.getRange(1, 1, 1, 12).setBackground('#1e7e34').setFontColor('white').setFontWeight('bold');
  }
  
  return sheet;
}

function appendToSheet(sheet, entry) {
  sheet.appendRow([
    entry.date,
    entry.source,
    entry.type,
    entry.topic,
    entry.summary,
    entry.players,
    entry.relevance,
    entry.saAngle,
    entry.action,
    'New',
    0, // Engagement score placeholder
    entry.autoGenerated
  ]);
}

function cleanupOldEntries(sheet) {
  const data = sheet.getDataRange().getValues();
  const cutoffDate = new Date();
  cutoffDate.setDate(cutoffDate.getDate() - CONFIG.CLEANUP_DAYS);
  
  let deletedCount = 0;
  for (let i = data.length - 1; i > 0; i--) {
    const rowDate = new Date(data[i][0]);
    const isAutoGenerated = data[i][11] === 'Yes';
    
    if (isAutoGenerated && rowDate < cutoffDate) {
      sheet.deleteRow(i + 1);
      deletedCount++;
    }
  }
  
  if (deletedCount > 0) {
    console.log(`üßπ Cleaned up ${deletedCount} old auto-generated entries`);
  }
}

function generateActionItem(type, data) {
  const actions = {
    injury: `"${data.web_name} Watch" - injury impact analysis with captain alternatives`,
    price: `"Price Movement Alert" - ${data.web_name} timing and strategy guide`,
    transfer: `"Trending Transfer" - ${data.web_name} analysis with SA perspective`,
    form: `"Form Fighter" - why ${data.web_name} deserves attention now`
  };
  
  return actions[type] || 'Analyze and create original BoetBall content piece';
}

function generateRedditActionItem(postData) {
  const title = postData.title.toLowerCase();
  
  if (title.includes('captain')) return '"Captain\'s Corner" - SA perspective on captaincy debate';
  if (title.includes('wildcard')) return '"Wildcard Wisdom" - template analysis with local insights';
  if (title.includes('transfer')) return '"Transfer Talk" - community trends with SA timing tips';
  if (title.includes('differential')) return '"Differential Delights" - under-the-radar picks for SA managers';
  
  return 'Community insight analysis with South African context';
}

function isFPLRelevant(title) {
  const keywords = [
    'transfer', 'captain', 'GW', 'gameweek', 'wildcard', 'chip', 'price', 
    'fixture', 'differential', 'template', 'form', 'injury', 'rotation'
  ];
  return keywords.some(keyword => title.toLowerCase().includes(keyword));
}

function extractPlayerMentions(text) {
  const mentions = PLAYER_POOL.filter(player => 
    text.toLowerCase().includes(player.toLowerCase())
  );
  return mentions.length > 0 ? mentions.slice(0, 3).join(', ') : 'Various players';
}

function extractSummary(text) {
  if (!text) return 'Community discussion on FPL strategy and player selection';
  
  // Clean and truncate text
  const cleaned = text.replace(/[*_~`]/g, '').replace(/\n+/g, ' ');
  return truncateText(cleaned, 120);
}

function truncateText(text, maxLength) {
  return text.length > maxLength ? text.substring(0, maxLength - 3) + '...' : text;
}

function formatCurrency(cost) {
  return `¬£${(cost / 10).toFixed(1)}m`;
}

function getRandomElement(array) {
  return array[Math.floor(Math.random() * array.length)];
}

/**
 * Manual test function - run this to test the system
 */
function testContentRadarSystem() {
  console.log('üß™ Testing BoetBall Content Radar System...');
  
  const sheet = getOrCreateSheet();
  
  // Test FPL Official API
  updateFPLOfficialData(sheet);
  
  console.log('‚úÖ Test completed - check your sheet for new entries');
}
