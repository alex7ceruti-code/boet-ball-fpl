// Boet Ball FPL Companion Database Schema
// User authentication, subscriptions, and preferences

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User authentication and profile
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                String    @id @default(cuid())
  name              String?
  email             String    @unique
  emailVerified     DateTime?
  image             String?
  password          String?   // For email/password auth
  
  // Email verification
  emailVerificationToken String? @unique
  emailVerificationExpires DateTime?
  
  // Profile information
  fplTeamId         Int?      // User's FPL Team ID
  miniLeague1Id     Int?      // First Mini League ID
  miniLeague2Id     Int?      // Second Mini League ID
  favoriteTeam      Int?      // Premier League team they support
  location          String?   // For South African cultural features
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  
  // Subscription and access
  subscriptionType  SubscriptionType @default(FREE)
  subscriptionStart DateTime? 
  subscriptionEnd   DateTime?
  isActive          Boolean   @default(true)
  promoCodeUsed     String?   // Track which promo code was used
  
  // Marketing and communication
  marketingOptIn    Boolean   @default(false)
  lastLoginAt       DateTime?
  loginCount        Int       @default(0)
  
  // Terms acceptance
  termsAcceptedAt   DateTime?
  termsVersion      String?
  
  // Relations
  accounts          Account[]
  sessions          Session[]
  preferences       UserPreferences?
  analytics         UserAnalytics[]
  newsAnalytics     NewsAnalytics[]
  articles          NewsArticle[]
  adminUser         AdminUser?
  watchlistPlayers  PlayerWatchlist[]
  analyticsPreferences UserAnalyticsPreferences?
  
  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// User preferences and settings
model UserPreferences {
  id                    String  @id @default(cuid())
  userId                String  @unique
  
  // Notification preferences
  emailNotifications    Boolean @default(true)
  weeklyReports         Boolean @default(true)
  transferReminders     Boolean @default(true)
  
  // Display preferences
  darkMode              Boolean @default(false)
  compactView           Boolean @default(false)
  showAdvancedStats     Boolean @default(false)
  
  // Cultural preferences
  slangIntensity        SlangIntensity @default(MODERATE)
  showSouthAfricanTime  Boolean @default(true)
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("user_preferences")
}

// User analytics and tracking
model UserAnalytics {
  id             String   @id @default(cuid())
  userId         String
  
  // Page/feature usage
  page           String
  action         String?
  timestamp      DateTime @default(now())
  sessionId      String?
  
  // Additional metadata
  metadata       String?  // JSON string for flexible data
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("user_analytics")
}

// News and content management
model NewsArticle {
  id            String   @id @default(cuid())
  slug          String   @unique
  title         String
  subtitle      String?
  content       String   // Full article content
  excerpt       String   // Short preview
  coverImage    String?  // URL to cover image
  
  // SEO and metadata
  metaTitle     String?
  metaDescription String?
  tags          String   // Comma-separated tags
  
  // Publishing
  status        ArticleStatus @default(DRAFT)
  publishedAt   DateTime?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  // Author info
  authorId      String
  author        User     @relation(fields: [authorId], references: [id])
  
  // Engagement
  views         Int      @default(0)
  likes         Int      @default(0)
  
  // Access control
  isPremium     Boolean  @default(false)
  
  // Analytics
  analytics     NewsAnalytics[]
  
  @@map("news_articles")
}

model NewsAnalytics {
  id        String   @id @default(cuid())
  articleId String
  userId    String?
  
  // Events
  event     AnalyticsEvent
  timestamp DateTime @default(now())
  metadata  String?  // JSON string for additional data
  
  // Relations
  article   NewsArticle @relation(fields: [articleId], references: [id], onDelete: Cascade)
  user      User?       @relation(fields: [userId], references: [id], onDelete: SetNull)
  
  @@map("news_analytics")
}

// Admin system
model AdminUser {
  id          String   @id @default(cuid())
  userId      String   @unique
  role        AdminRole @default(EDITOR)
  permissions String   // JSON string of permissions
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("admin_users")
}

// Promo code system for future premium features
model PromoCode {
  id            String   @id @default(cuid())
  code          String   @unique
  description   String?
  discountType  DiscountType
  discountValue Int      // Percentage or amount in cents
  
  // Usage limits
  maxUses       Int?     // NULL = unlimited
  currentUses   Int      @default(0)
  
  // Validity
  validFrom     DateTime @default(now())
  validUntil    DateTime?
  isActive      Boolean  @default(true)
  
  // Restrictions
  newUsersOnly  Boolean  @default(false)
  
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  @@map("promo_codes")
}

// Player watchlist for admin curated picks
model PlayerWatchlist {
  id            String   @id @default(cuid())
  
  // Player identification
  fplPlayerId   Int      // FPL API player ID
  playerName    String   // Player display name
  teamName      String   // Team name
  position      String   // Player position
  currentPrice  Float    // Current FPL price
  
  // Admin analysis
  reason        String   // Why this player is being watched
  eyeTestNotes  String?  // Eye test observations
  confidence    WatchlistConfidence @default(MEDIUM) // How confident about the pick
  
  // Statistical backing
  reliabilityScore   Int     // Advanced analytics score
  valueScore         Int     // Value efficiency score  
  attackingThreat    Int     // Attacking potential score
  
  // Status and timing
  status        WatchlistStatus @default(ACTIVE)
  priority      WatchlistPriority @default(MEDIUM)
  addedAt       DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  // Admin who added/manages
  addedBy       String
  admin         User     @relation(fields: [addedBy], references: [id])
  
  // Performance tracking
  targetPrice   Float?   // Price target for recommendation
  targetGW      Int?     // Gameweek target for breakout
  actualOutcome String?  // How the pick turned out
  
  @@map("player_watchlist")
}

// Enums
enum SubscriptionType {
  FREE
  PREMIUM
}

enum SlangIntensity {
  NONE
  LIGHT
  MODERATE
  HEAVY
}

enum ArticleStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

enum AnalyticsEvent {
  VIEW
  LIKE
  SHARE
  CLICK
}

enum AdminRole {
  SUPER_ADMIN
  ADMIN
  EDITOR
  WRITER
}

enum DiscountType {
  PERCENTAGE
  FIXED_AMOUNT
  FREE_TRIAL
}

enum WatchlistConfidence {
  LOW
  MEDIUM
  HIGH
  VERY_HIGH
}

enum WatchlistStatus {
  ACTIVE
  MONITORING
  TRIGGERED
  ARCHIVED
}

enum WatchlistPriority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

// Enhanced Analytics Tables for Predictions and Risk Assessment

// Player performance predictions for future gameweeks
model PlayerPrediction {
  id              String   @id @default(cuid())
  
  // Player identification
  fplPlayerId     Int
  playerName      String
  position        String
  teamId          Int
  
  // Prediction details
  gameweek        Int
  predictedPoints Float    // Specific point prediction
  confidence      Float    // 0-1 confidence score
  
  // Prediction breakdown
  basePoints      Float    // Historical average baseline
  formAdjustment  Float    // Form-based adjustment
  fixtureAdjustment Float  // Fixture difficulty adjustment
  teamFormAdjustment Float // Team form impact
  injuryRiskAdjustment Float // Injury risk discount
  rotationRiskAdjustment Float // Rotation risk discount
  
  // Model metadata
  modelVersion    String   // Version of prediction model used
  predictionDate  DateTime @default(now())
  
  // Validation tracking
  actualPoints    Float?   // Filled in after gameweek
  accuracy        Float?   // |predicted - actual| / predicted
  
  @@unique([fplPlayerId, gameweek, modelVersion])
  @@map("player_predictions")
}

// Historical player performance data for trend analysis
model PlayerGameweekHistory {
  id              String   @id @default(cuid())
  
  // Player and gameweek
  fplPlayerId     Int
  gameweek        Int
  season          String   // e.g., "2024-25"
  
  // Basic performance
  points          Int
  minutes         Int
  goals           Int
  assists         Int
  cleanSheets     Int
  goalsConceded   Int
  saves           Int
  bonus           Int
  bps             Int
  
  // Advanced stats
  expectedGoals   Float?
  expectedAssists Float?
  influence       Float?
  creativity      Float?
  threat          Float?
  
  // Match context
  wasHome         Boolean
  opponentTeamId  Int
  fixturedifficulty Int
  teamGoalsFor    Int?
  teamGoalsAgainst Int?
  
  // Status
  started         Boolean  @default(false)
  played          Boolean  @default(false)
  
  recordedAt      DateTime @default(now())
  
  @@unique([fplPlayerId, gameweek, season])
  @@map("player_gameweek_history")
}

// Risk assessment data for each player
model PlayerRiskAssessment {
  id              String   @id @default(cuid())
  
  fplPlayerId     Int      @unique
  playerName      String
  position        String
  teamId          Int
  
  // Risk scores (0-100, higher = more risky)
  rotationRisk    Int      // Likelihood of being rotated
  injuryRisk      Int      // Injury proneness score
  priceChangeRisk Int      // Price drop probability
  formVolatility  Int      // Boom/bust tendency
  
  // Risk factors breakdown
  minutesConsistency Float // How consistent minutes are
  injuryHistory   Json?    // Historical injury data
  transferTrend   String?  // Recent transfer activity
  teamDepth       Int?     // Competition for position
  
  // Overall risk profile
  overallRiskScore Int     // Composite risk score
  riskCategory    RiskCategory
  
  // Recommendation flags
  conservativePickSuitability Int  // 0-100 how suitable for conservative users
  aggressivePickSuitability   Int  // 0-100 how suitable for aggressive users
  
  lastUpdated     DateTime @default(now())
  
  @@map("player_risk_assessments")
}

// Team form and strength data
model TeamAnalytics {
  id              String   @id @default(cuid())
  
  fplTeamId       Int      @unique
  teamName        String
  shortName       String
  
  // Current form metrics
  last5Games      Json     // Results of last 5 games
  goalsForPer90   Float
  goalsAgainstPer90 Float
  xGForPer90      Float?
  xGAgainstPer90  Float?
  
  // Strength ratings (dynamic, updated weekly)
  attackStrength  Int      // 1-5 attack rating
  defenseStrength Int      // 1-5 defense rating
  homeAdvantage   Float    // Home performance boost
  
  // Fixture analysis
  upcomingFixtures Json    // Next 6 gameweeks fixture data
  difficultyRating Float   // Average upcoming difficulty
  
  lastUpdated     DateTime @default(now())
  
  @@map("team_analytics")
}

// Track model performance for continuous improvement
model PredictionAccuracy {
  id              String   @id @default(cuid())
  
  modelVersion    String
  gameweek        Int
  
  // Aggregate accuracy metrics
  totalPredictions Int
  meanAbsoluteError Float  // Average |predicted - actual|
  rootMeanSquaredError Float
  accuracyWithin1  Float   // % of predictions within 1 point
  accuracyWithin2  Float   // % of predictions within 2 points
  
  // By position breakdown
  gkAccuracy      Float?
  defAccuracy     Float?
  midAccuracy     Float?
  fwdAccuracy     Float?
  
  calculatedAt    DateTime @default(now())
  
  @@unique([modelVersion, gameweek])
  @@map("prediction_accuracy")
}

// User preference for recommendation style
model UserAnalyticsPreferences {
  id              String   @id @default(cuid())
  userId          String   @unique
  
  // Risk tolerance settings
  riskTolerance   RiskTolerance @default(BALANCED)
  
  // Prediction preferences
  predictionHorizon Int    @default(6) // How many GWs ahead
  minConfidence   Float    @default(0.6) // Minimum prediction confidence
  
  // Budget constraints
  maxPlayerPrice  Float?   // Maximum price per player
  totalBudget     Float?   // Total team budget
  
  // Position preferences
  favoritePositions Json? // Which positions to focus on
  avoidHighRisk   Boolean @default(false)
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("user_analytics_preferences")
}

enum RiskCategory {
  VERY_LOW
  LOW
  MEDIUM
  HIGH
  VERY_HIGH
}

enum RiskTolerance {
  CONSERVATIVE  // High accuracy, fewer opportunities
  BALANCED      // Middle ground
  AGGRESSIVE    // More opportunities, some noise
}
